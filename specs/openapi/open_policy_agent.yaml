# Needs review by SMEs
# 'pretty' parameter setting does not appear to affect anything. Omitting, setting to true or false all has the same result - always human-readable
openapi: 3.0.3
# servers:
#  - url: 'http://localhost:8181'
#    description: Docker
tags:
  - name: Policy API
    description: 'Allows you to add, remove and modify policy modules. *Policy module identifiers are only used for management purposes. They are not used outside the Policy API.*'
  - name: Data API
    description: 'Exposes endpoints for reading and writing documents in OPA. For an explanation of the different types of documents, see [the OPA document model](https://www.openpolicyagent.org/docs/latest/philosophy/#the-opa-document-model)'
  - name: Query API
    description: Posting queries to OPA
  - name: Compile API
    description: Posting partial queries to OPA
  - name: Health API
    description: Executes a simple built-in policy query to verify that the server is operational
info:
  title: Open Policy Agent (OPA) REST API
  description: |-
    OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.

    ### API specification viewing options

    - **[View the specification in *Redoc* (default)](index.html)**
    - **[View the specification in *Swagger UI*](swagger-ui.html)**
  version: 0.28.0
  x-logo:
    url: 'https://github.com/open-policy-agent/opa/blob/master/docs/website/static/img/logos/opa-horizontal-color.png?raw=true'
    backgroundColor: '#FFFFFF'
    altText: 'OPA logo'
  contact:
    name: The OPA team
    url: 'https://github.com/open-policy-agent/opa'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
externalDocs:
  description: OPA documentation
  url: 'https://www.openpolicyagent.org/docs/latest/'
paths:
  '/v1/data/{path}':
    parameters:
      - $ref: '#/components/parameters/pathParameter'
    get:
      summary: Get a document
      description: |-
        This API endpoint returns the document specified by `path`.

        The server will return a *bad request* (400) response if either:
        - The query requires an input document and you do not provide it
        - You provide the input document but the query has already defined it.
      operationId: getDocument
      parameters:
        - $ref: '#/components/parameters/inputParameter'
        - $ref: '#/components/parameters/prettyParameter'
        - $ref: '#/components/parameters/provenanceParameter'
        - $ref: '#/components/parameters/explainParameter'
        - $ref: '#/components/parameters/metricsParameter'
        - $ref: '#/components/parameters/instrumentParameter'
      tags:
        - Data API
      responses:
        '200':
          $ref: '#/components/responses/successResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/serverErrorResponse'
    post:
      summary: Get a document (with input)
      description: |-
        The server will return a *bad request* (400) response if either:
        - The query requires an input document and you do not provide it
        - You provided an input document but the query has already defined it.

        If `path` indexes into an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, a *not found* response (404) will be returned.
      operationId: getDocumentWithPath
      parameters:
        - $ref: '#/components/parameters/prettyParameter'
        - $ref: '#/components/parameters/provenanceParameter'
        - $ref: '#/components/parameters/explainParameter'
        - $ref: '#/components/parameters/metricsParameter'
        - $ref: '#/components/parameters/instrumentParameter'
      requestBody:
        description: The input document (in JSON format)
        required: true
        content:
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/inputSchema'
      tags:
        - Data API
      responses:
        '200':
          $ref: '#/components/responses/successResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/serverErrorResponse'
  /health:
    get:
      summary: Health
      description: |-
        This API endpoint verifies that the server is operational.

        The response from the server is either 200 or 500:
        - **200** - OPA service is healthy. If `bundles` is true, then all configured bundles have been activated. If `plugins` is true, then all plugins are in an 'OK' state.
        - **500** - OPA service is *not* healthy. If `bundles` is true, at least one of configured bundles has not yet been activated. If `plugins` is true, at least one plugins is in a 'not OK' state.

        ---
        **Note**
        This check is only for initial bundle activation. Subsequent downloads will not affect the health check.

        Use the **status** endpoint (in the (management API)[management.html]) for more fine-grained bundle status monitoring.

        ---
      externalDocs:
        description: Bundles
        url: 'https://www.openpolicyagent.org/docs/latest/management/#bundles'
      operationId: getHealth
      parameters:
        - $ref: '#/components/parameters/bundlesParameter'
        - $ref: '#/components/parameters/pluginsParameter'
      tags:
        - Health API
      responses:
        '200':
          description: OPA service is healthy
        '500':
          description: OPA service is not healthy
components:
  parameters:
    prettyParameter:
      name: pretty
      description: 'If true, response will be in a human-readable format.'
      example: true
      in: query
      required: false
      schema:
        type: boolean
    metricsParameter:
      name: metrics
      description: 'If true, compiler performance metrics will be returned in the response.'
      example: false
      in: query
      required: false
      schema:
        type: boolean
    pathParameter:
      name: path
      description: 'A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404.'
      example: opa/examples/public_servers
      in: path
      required: true
      allowReserved: true
      schema:
        type: string
    provenanceParameter:
      name: provenance
      description: 'If true, response will include build and version information in addition to the result.'
      example: false
      in: query
      required: false
      schema:
        type: boolean
    explainParameter:
      name: explain
      description: 'If set to *full*, response will include query explanations in addition to the result.'
      example: full
      in: query
      required: false
      schema:
        type: string
    instrumentParameter:
      name: instrument
      description: |-
        If true, response will return additional performance metrics in addition to the result and the standard metrics.

        **Caution:** This can add significant overhead to query evaluation. The recommendation is to only use this parameter if you are debugging a performance problem.
      example: false
      in: query
      required: false
      schema:
        type: boolean
    inputParameter:
      name: input
      description: 'Provide the text for an [input document](https://www.openpolicyagent.org/docs/latest/kubernetes-primer/#input-document) in JSON format'
      in: query
      required: false
      schema:
        type: object
        additionalProperties: {}
        example: {"input": {"example": {"flag": true}}}
    bundlesParameter:
      name: bundles
      description: |-
        Reports on bundle activation status (useful for 'ready' checks at startup).

        This includes any discovery bundles or bundles defined in the loaded discovery configuration.
      example: true
      in: query
      required: false
      schema:
        type: boolean
    pluginsParameter:
      name: plugins
      description: Reports on plugin status
      example: false
      in: query
      required: false
      schema:
        type: boolean
  responses:
    successResponse:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/successResponse'
    badRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response400'
    serverErrorResponse:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response400'
  schemas:
    provenance:
      type: object
      properties:
        version:
          type: string
          description: The version of this OPA instance
        build_commit:
          type: string
          example: 4c6e524
          description: The Git commit id of this OPA build.
        build_timestamp:
          type: string
          description: 'When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))'
        build_hostname:
          type: string
          description: The hostname where this instance was built.
          example: 3bb58334a5a9
        bundles:
          type: object
          description: A set of key-value pairs describing each bundle activated on the server.
          additionalProperties: {}
    response400:
      type: object
      properties:
        code:
          description: The error code name
          example: invalid_parameter
          type: string
          minLength: 1
        message:
          description: The description of the error
          type: string
          minLength: 1
          example: error(s) occurred while compiling module(s)
        errors:
          description: 'Errors that may have been generated during the parse, compile, or installation of a policy module'
          type: array
          uniqueItems: true
          items:
            properties:
              code:
                description: The error code name
                type: string
                minLength: 1
                example: rego_unsafe_var_error
              message:
                description: A general description of the error
                type: string
                minLength: 1
                example: var x is unsafe
              location:
                description: Where the error occurred
                type: object
                properties:
                  file:
                    description: The policy module name that generated the error
                    type: string
                    example: example1
                  row:
                    description: The line number in the policy module where the error occurred
                    type: number
                    example: 3
                  col:
                    description: The column in the policy module where the error occurred
                    type: number
                    example: 1
      required:
        - code
        - message
    inputSchema:
      type: object
      example: |-
        {
          "input": {
           "example": {
             "flag": true
             }
           }
         }
      additionalProperties: {}
      x-examples:
        example: |-
          {
            "input": {
             "example": {
               "flag": true
               }
             }
           }
    successResponse:
      type: object
      properties:
        decision_id:
          type: string
        result:
          type: boolean
        provenance:
          $ref: '#/components/schemas/provenance'
        metrics:
          type: object
          additionalProperties: {}
  securitySchemes: {}
security: []
