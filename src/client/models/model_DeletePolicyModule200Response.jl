# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""deletePolicyModule_200_response

    DeletePolicyModule200Response(;
        result=nothing,
        provenance=nothing,
        metrics=nothing,
        explanation=nothing,
    )

    - result::Vector{Response200ResultResultInner}
    - provenance::Response200ProvenanceProvenance
    - metrics::Response200MetricsMetrics
    - explanation::Vector{Response200ExplanationsExplanationInner}
"""
Base.@kwdef mutable struct DeletePolicyModule200Response <: OpenAPI.APIModel
    result::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Response200ResultResultInner} }
    provenance = nothing # spec type: Union{ Nothing, Response200ProvenanceProvenance }
    metrics = nothing # spec type: Union{ Nothing, Response200MetricsMetrics }
    explanation::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Response200ExplanationsExplanationInner} }

    function DeletePolicyModule200Response(result, provenance, metrics, explanation, )
        OpenAPI.validate_property(DeletePolicyModule200Response, Symbol("result"), result)
        OpenAPI.validate_property(DeletePolicyModule200Response, Symbol("provenance"), provenance)
        OpenAPI.validate_property(DeletePolicyModule200Response, Symbol("metrics"), metrics)
        OpenAPI.validate_property(DeletePolicyModule200Response, Symbol("explanation"), explanation)
        return new(result, provenance, metrics, explanation, )
    end
end # type DeletePolicyModule200Response

const _property_types_DeletePolicyModule200Response = Dict{Symbol,String}(Symbol("result")=>"Vector{Response200ResultResultInner}", Symbol("provenance")=>"Response200ProvenanceProvenance", Symbol("metrics")=>"Response200MetricsMetrics", Symbol("explanation")=>"Vector{Response200ExplanationsExplanationInner}", )
OpenAPI.property_type(::Type{ DeletePolicyModule200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeletePolicyModule200Response[name]))}

function check_required(o::DeletePolicyModule200Response)
    true
end

function OpenAPI.validate_property(::Type{ DeletePolicyModule200Response }, name::Symbol, val)
end
