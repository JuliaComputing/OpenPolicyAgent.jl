# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""response200SingleResult_result_bundles_authz
Auth

    Response200SingleResultResultBundlesAuthz(;
        service=nothing,
    )

    - service::String : Service
"""
Base.@kwdef mutable struct Response200SingleResultResultBundlesAuthz <: OpenAPI.APIModel
    service::Union{Nothing, String} = nothing

    function Response200SingleResultResultBundlesAuthz(service, )
        OpenAPI.validate_property(Response200SingleResultResultBundlesAuthz, Symbol("service"), service)
        return new(service, )
    end
end # type Response200SingleResultResultBundlesAuthz

const _property_types_Response200SingleResultResultBundlesAuthz = Dict{Symbol,String}(Symbol("service")=>"String", )
OpenAPI.property_type(::Type{ Response200SingleResultResultBundlesAuthz }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Response200SingleResultResultBundlesAuthz[name]))}

function check_required(o::Response200SingleResultResultBundlesAuthz)
    true
end

function OpenAPI.validate_property(::Type{ Response200SingleResultResultBundlesAuthz }, name::Symbol, val)
    if name === Symbol("service")
        OpenAPI.validate_param(name, "Response200SingleResultResultBundlesAuthz", :minLength, val, 1)
    end
end
