# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""response200SingleResult_result_decision_logs
Logs

    Response200SingleResultResultDecisionLogs(;
        service=nothing,
    )

    - service::String : Service
"""
Base.@kwdef mutable struct Response200SingleResultResultDecisionLogs <: OpenAPI.APIModel
    service::Union{Nothing, String} = nothing

    function Response200SingleResultResultDecisionLogs(service, )
        OpenAPI.validate_property(Response200SingleResultResultDecisionLogs, Symbol("service"), service)
        return new(service, )
    end
end # type Response200SingleResultResultDecisionLogs

const _property_types_Response200SingleResultResultDecisionLogs = Dict{Symbol,String}(Symbol("service")=>"String", )
OpenAPI.property_type(::Type{ Response200SingleResultResultDecisionLogs }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Response200SingleResultResultDecisionLogs[name]))}

function check_required(o::Response200SingleResultResultDecisionLogs)
    true
end

function OpenAPI.validate_property(::Type{ Response200SingleResultResultDecisionLogs }, name::Symbol, val)
    if name === Symbol("service")
        OpenAPI.validate_param(name, "Response200SingleResultResultDecisionLogs", :minLength, val, 1)
    end
end
