# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""response400_errors_inner_location
Where the error occurred

    Response400ErrorsInnerLocation(;
        file=nothing,
        row=nothing,
        col=nothing,
    )

    - file::String : The policy module name that generated the error
    - row::Float64 : The line number in the policy module where the error occurred
    - col::Float64 : The column in the policy module where the error occurred
"""
Base.@kwdef mutable struct Response400ErrorsInnerLocation <: OpenAPI.APIModel
    file::Union{Nothing, String} = nothing
    row::Union{Nothing, Float64} = nothing
    col::Union{Nothing, Float64} = nothing

    function Response400ErrorsInnerLocation(file, row, col, )
        OpenAPI.validate_property(Response400ErrorsInnerLocation, Symbol("file"), file)
        OpenAPI.validate_property(Response400ErrorsInnerLocation, Symbol("row"), row)
        OpenAPI.validate_property(Response400ErrorsInnerLocation, Symbol("col"), col)
        return new(file, row, col, )
    end
end # type Response400ErrorsInnerLocation

const _property_types_Response400ErrorsInnerLocation = Dict{Symbol,String}(Symbol("file")=>"String", Symbol("row")=>"Float64", Symbol("col")=>"Float64", )
OpenAPI.property_type(::Type{ Response400ErrorsInnerLocation }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Response400ErrorsInnerLocation[name]))}

function check_required(o::Response400ErrorsInnerLocation)
    true
end

function OpenAPI.validate_property(::Type{ Response400ErrorsInnerLocation }, name::Symbol, val)
end
