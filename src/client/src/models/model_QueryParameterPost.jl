# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""queryParameterPost

    QueryParameterPost(;
        query=nothing,
        input=nothing,
    )

    - query::String : The ad-hoc query to execute. OPA will parse, compile, and execute the query represented by the parameter value. The value MUST be URL encoded. Only used in GET method. For POST method the query is sent as part of the request body and this parameter is not used.
    - input::Dict{String, Any} : The input document (in JSON format)
"""
Base.@kwdef mutable struct QueryParameterPost <: OpenAPI.APIModel
    query::Union{Nothing, String} = nothing
    input::Union{Nothing, Dict{String, Any}} = nothing

    function QueryParameterPost(query, input, )
        OpenAPI.validate_property(QueryParameterPost, Symbol("query"), query)
        OpenAPI.validate_property(QueryParameterPost, Symbol("input"), input)
        return new(query, input, )
    end
end # type QueryParameterPost

const _property_types_QueryParameterPost = Dict{Symbol,String}(Symbol("query")=>"String", Symbol("input")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ QueryParameterPost }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QueryParameterPost[name]))}

function check_required(o::QueryParameterPost)
    true
end

function OpenAPI.validate_property(::Type{ QueryParameterPost }, name::Symbol, val)
end
