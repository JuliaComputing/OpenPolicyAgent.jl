# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""response404

    Response404(;
        code=nothing,
        message=nothing,
    )

    - code::String : The error code name
    - message::String : The description of the error (including the name of any undefined policy module)
"""
Base.@kwdef mutable struct Response404 <: OpenAPI.APIModel
    code::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function Response404(code, message, )
        OpenAPI.validate_property(Response404, Symbol("code"), code)
        OpenAPI.validate_property(Response404, Symbol("message"), message)
        return new(code, message, )
    end
end # type Response404

const _property_types_Response404 = Dict{Symbol,String}(Symbol("code")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ Response404 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Response404[name]))}

function check_required(o::Response404)
    o.code === nothing && (return false)
    o.message === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Response404 }, name::Symbol, val)
    if name === Symbol("code")
        OpenAPI.validate_param(name, "Response404", :minLength, val, 1)
    end
    if name === Symbol("message")
        OpenAPI.validate_param(name, "Response404", :minLength, val, 1)
    end
end
