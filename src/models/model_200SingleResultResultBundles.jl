# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""_200SingleResult_result_bundles
Bundles

    200SingleResultResultBundles(;
        authz=nothing,
    )

    - authz::200SingleResultResultBundlesAuthz
"""
Base.@kwdef mutable struct 200SingleResultResultBundles <: OpenAPI.APIModel
    authz = nothing # spec type: Union{ Nothing, 200SingleResultResultBundlesAuthz }

    function 200SingleResultResultBundles(authz, )
        OpenAPI.validate_property(200SingleResultResultBundles, Symbol("authz"), authz)
        return new(authz, )
    end
end # type 200SingleResultResultBundles

const _property_types_200SingleResultResultBundles = Dict{Symbol,String}(Symbol("authz")=>"200SingleResultResultBundlesAuthz", )
OpenAPI.property_type(::Type{ 200SingleResultResultBundles }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_200SingleResultResultBundles[name]))}

function check_required(o::200SingleResultResultBundles)
    true
end

function OpenAPI.validate_property(::Type{ 200SingleResultResultBundles }, name::Symbol, val)
end
