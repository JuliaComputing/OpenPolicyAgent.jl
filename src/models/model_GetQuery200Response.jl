# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""getQuery_200_response

    GetQuery200Response(;
        result=nothing,
        metrics=nothing,
        explanation=nothing,
    )

    - result::Vector{Response200ResultResultInner}
    - metrics::Response200MetricsMetrics
    - explanation::Vector{Response200ExplanationsExplanationInner}
"""
Base.@kwdef mutable struct GetQuery200Response <: OpenAPI.APIModel
    result::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Response200ResultResultInner} }
    metrics = nothing # spec type: Union{ Nothing, Response200MetricsMetrics }
    explanation::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Response200ExplanationsExplanationInner} }

    function GetQuery200Response(result, metrics, explanation, )
        OpenAPI.validate_property(GetQuery200Response, Symbol("result"), result)
        OpenAPI.validate_property(GetQuery200Response, Symbol("metrics"), metrics)
        OpenAPI.validate_property(GetQuery200Response, Symbol("explanation"), explanation)
        return new(result, metrics, explanation, )
    end
end # type GetQuery200Response

const _property_types_GetQuery200Response = Dict{Symbol,String}(Symbol("result")=>"Vector{Response200ResultResultInner}", Symbol("metrics")=>"Response200MetricsMetrics", Symbol("explanation")=>"Vector{Response200ExplanationsExplanationInner}", )
OpenAPI.property_type(::Type{ GetQuery200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetQuery200Response[name]))}

function check_required(o::GetQuery200Response)
    true
end

function OpenAPI.validate_property(::Type{ GetQuery200Response }, name::Symbol, val)
end
