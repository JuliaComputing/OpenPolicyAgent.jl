# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""response200Explanations_explanation_inner_node
The AST element associated with the evaluation step.

    Response200ExplanationsExplanationInnerNode(;
        index=nothing,
        terms=nothing,
    )

    - index::Float64 : Node number
    - terms::Vector{Response200ExplanationsExplanationInnerNodeTermsInner}
"""
Base.@kwdef mutable struct Response200ExplanationsExplanationInnerNode <: OpenAPI.APIModel
    index::Union{Nothing, Float64} = nothing
    terms::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Response200ExplanationsExplanationInnerNodeTermsInner} }

    function Response200ExplanationsExplanationInnerNode(index, terms, )
        OpenAPI.validate_property(Response200ExplanationsExplanationInnerNode, Symbol("index"), index)
        OpenAPI.validate_property(Response200ExplanationsExplanationInnerNode, Symbol("terms"), terms)
        return new(index, terms, )
    end
end # type Response200ExplanationsExplanationInnerNode

const _property_types_Response200ExplanationsExplanationInnerNode = Dict{Symbol,String}(Symbol("index")=>"Float64", Symbol("terms")=>"Vector{Response200ExplanationsExplanationInnerNodeTermsInner}", )
OpenAPI.property_type(::Type{ Response200ExplanationsExplanationInnerNode }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Response200ExplanationsExplanationInnerNode[name]))}

function check_required(o::Response200ExplanationsExplanationInnerNode)
    true
end

function OpenAPI.validate_property(::Type{ Response200ExplanationsExplanationInnerNode }, name::Symbol, val)
end
