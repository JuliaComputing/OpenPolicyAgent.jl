# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""response200SingleResult_result_keys_global_key
Global Key

    Response200SingleResultResultKeysGlobalKey(;
        scope=nothing,
    )

    - scope::String : Scope
"""
Base.@kwdef mutable struct Response200SingleResultResultKeysGlobalKey <: OpenAPI.APIModel
    scope::Union{Nothing, String} = nothing

    function Response200SingleResultResultKeysGlobalKey(scope, )
        OpenAPI.validate_property(Response200SingleResultResultKeysGlobalKey, Symbol("scope"), scope)
        return new(scope, )
    end
end # type Response200SingleResultResultKeysGlobalKey

const _property_types_Response200SingleResultResultKeysGlobalKey = Dict{Symbol,String}(Symbol("scope")=>"String", )
OpenAPI.property_type(::Type{ Response200SingleResultResultKeysGlobalKey }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Response200SingleResultResultKeysGlobalKey[name]))}

function check_required(o::Response200SingleResultResultKeysGlobalKey)
    true
end

function OpenAPI.validate_property(::Type{ Response200SingleResultResultKeysGlobalKey }, name::Symbol, val)
    if name === Symbol("scope")
        OpenAPI.validate_param(name, "Response200SingleResultResultKeysGlobalKey", :minLength, val, 1)
    end
end
